G.Graphic.Anim={options:{duration:2,repeatCount:-1},play:function(){var a=this;if(!a._layer||a._playing)return a;a._playing=!0;var b=1E3*a.options.duration,d=a.options.repeatCount;a._startAt=+new Date;a._endAt=0<d?a._startAt+b*d:null;clearTimeout(a._tid);a._tid=setTimeout(function(){a._onStep()},30);return a},stop:function(){this._playing=!1;clearTimeout(this._tid);return this},_onStep:function(){var a=this,b,d=+new Date;a._playing&&(a._endAt&&d>a._endAt?a._final():(b=1E3*a.options.duration,b=(d-
a._startAt)%b/b,a._interpolate(b),clearTimeout(a._tid),a._tid=setTimeout(function(){a._onStep()},30)))},_final:function(){var a=this._toGraphic;this.updateGeom(a.geom);this.updateOptions(a.options);this._playing=!1},_interNum:function(a,b,d){return a+(b-a)*d},_interArr:function(a,b,d){if(a&&b){var f=[],g=Math.min(a.length,b.length),l,h,k;for(l=0;l<g;l++)h=a[l],k=b[l],f[l]=this._interNum(h,k,d);return f}},_interColor:function(a,b,d){var f=G.Util.colorRgb;a=f(a);b=f(b);d=this._interArr(a,b,d);return G.Util.colorHex(d[0],
d[1],d[2])},_interpolate:function(a){},_onStartEdit:function(){},_onEndEdit:function(){}};
G.Graphic.AnimPoint=G.Graphic.Point.extend({mixins:[G.Graphic.Anim],init:function(a,b,d){var f=G.Graphic.Point;if(!(a instanceof f&&b instanceof f))throw Error("Type error");this.options=G.Util.merge({},this.options,a.options,d);this._fromGraphic=a;this._toGraphic=b},_interpolate:function(a){var b=this._fromGraphic,d=this._toGraphic,f=this._interArr(b.geom,d.geom,a),b=b.options,d=d.options,g=G.Util.merge({},b),l=["size","offset","fillImageSize"],h=["imageRotate","outlineWidth","outlineOpacity","fillOpacity"],
k=["outlineColor","fillColor"],c,e;for(c=l.length-1;0<=c;c--)(e=l[c])&&(g[e]=this._interArr(b[e],d[e],a));for(c=h.length-1;0<=c;c--)(e=h[c])&&(g[e]=this._interNum(b[e],d[e],a));for(c=k.length-1;0<=c;c--)(e=k[c])&&(g[e]=this._interColor(b[e],d[e],a));this.updateGeom(f);this.updateOptions(g)}});
G.Graphic.AnimPolyline=G.Graphic.Polyline.extend({mixins:[G.Graphic.Anim],init:function(a,b,d){var f=G.Graphic.Polyline;if(!(a instanceof f&&b instanceof f))throw Error("Type error");this.options=G.Util.merge({},this.options,a.options,d);this._fromGraphic=a;this._toGraphic=b},_interpolate:function(a){var b=this._fromGraphic,d=this._toGraphic,f=b.geom,g=d.geom,l=[],h,k,c,e=Math.min(f.length,g.length);for(c=0;c<e;c++)h=f[c],k=g[c],l[c]=this._interArr(h,k,a);b=b.options;d=d.options;f=G.Util.merge({},
b);g=["lineDashArray"];h=["lineWidth","lineOpacity"];k=["lineColor"];for(c=g.length-1;0<=c;c--)(e=g[c])&&(f[e]=this._interArr(b[e],d[e],a));for(c=h.length-1;0<=c;c--)(e=h[c])&&(f[e]=this._interNum(b[e],d[e],a));for(c=k.length-1;0<=c;c--)(e=k[c])&&(f[e]=this._interColor(b[e],d[e],a));this.updateGeom(l);this.updateOptions(f)}});
G.Graphic.AnimPolygon=G.Graphic.Polygon.extend({mixins:[G.Graphic.Anim],init:function(a,b,d){var f=G.Graphic.Polygon;if(!(a instanceof f&&b instanceof f))throw Error("Type error");this.options=G.Util.merge({},this.options,a.options,d);this._fromGraphic=a;this._toGraphic=b},_interpolate:function(a){var b=this._fromGraphic,d=this._toGraphic,f=b.geom,g=d.geom,l=[],h,k,c,e,p,m,r=Math.min(f.length,g.length),n,q;for(m=0;m<r;m++){h=f[m];k=g[m];c=[];q=Math.min(h.length,k.length);for(n=0;n<q;n++)e=h[n],p=
k[n],c[n]=this._interArr(e,p,a);l[m]=c}b=b.options;d=d.options;f=G.Util.merge({},b);g=["outlineDashArray","fillImageSize"];h=["outlineWidth","outlineOpacity","fillOpacity"];k=["outlineColor","fillColor"];for(m=g.length-1;0<=m;m--)(c=g[m])&&(f[c]=this._interArr(b[c],d[c],a));for(m=h.length-1;0<=m;m--)(c=h[m])&&(f[c]=this._interNum(b[c],d[c],a));for(m=k.length-1;0<=m;m--)(c=k[m])&&(f[c]=this._interColor(b[c],d[c],a));this.updateGeom(l);this.updateOptions(f)}});
G.Graphic.AnimCircle=G.Graphic.Circle.extend({mixins:[G.Graphic.Anim],init:function(a,b,d){var f=G.Graphic.Circle;if(!(a instanceof f&&b instanceof f))throw Error("Type error");this.options=G.Util.merge({},this.options,a.options,d);this._fromGraphic=a;this._toGraphic=b},_interpolate:function(a){var b=this._fromGraphic,d=this._toGraphic,f=this._interArr(b.geom,d.geom,a),b=b.options,d=d.options,g=G.Util.merge({},b),l=["outlineDashArray","fillImageSize"],h=["outlineWidth","outlineOpacity","fillOpacity"],
k=["outlineColor","fillColor"],c,e;for(c=l.length-1;0<=c;c--)(e=l[c])&&(g[e]=this._interArr(b[e],d[e],a));for(c=h.length-1;0<=c;c--)(e=h[c])&&(g[e]=this._interNum(b[e],d[e],a));for(c=k.length-1;0<=c;c--)(e=k[c])&&(g[e]=this._interColor(b[e],d[e],a));this.updateGeom(f);this.updateOptions(g)}});
